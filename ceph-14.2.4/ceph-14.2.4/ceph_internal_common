#!/bin/bash

if [ -z "$CLUSTER_NAME" ] ; then
    echo "ERROR: CLUSTER_NAME must be specified"
    exit 1
fi

DIR_ETC_CEPH=/etc/ceph
DIR_VAR_LIB_CEPH=/var/lib/ceph
DIR_VAR_RUN_CEPH=/var/run/ceph

CCONF=${DIR_ETC_CEPH}/${CLUSTER_NAME}.conf
INIT_MONMAP=${DIR_ETC_CEPH}/monmap
CLUSTER_KEYRING=${DIR_ETC_CEPH}/${CLUSTER_NAME}.keyring
ADMIN_KEYRING=${DIR_ETC_CEPH}/${CLUSTER_NAME}.client.admin.keyring
OSD_BOOTSTRAP_KEYRING=${DIR_VAR_LIB_CEPH}/bootstrap-osd/${CLUSTER_NAME}.keyring
MDS_BOOTSTRAP_KEYRING=${DIR_VAR_LIB_CEPH}/bootstrap-mds/${CLUSTER_NAME}.keyring
RGW_BOOTSTRAP_KEYRING=${DIR_VAR_LIB_CEPH}/bootstrap-rgw/${CLUSTER_NAME}.keyring
RBD_MIRROR_BOOTSTRAP_KEYRING=${DIR_VAR_LIB_CEPH}/bootstrap-rbd/${CLUSTER_NAME}.keyring

function ensure_initialized()
{
    if [ ! -f $INIT_MONMAP ] ; then
        echo "ERROR: $INIT_MONMAP not exist"
        return 1
    fi 
    
    if [ ! -f $CLUSTER_KEYRING ] ; then
        echo "ERROR: $CLUSTER_KEYRING not exist"
        return 1
    fi 
    
    if [ ! -f $CCONF ] ; then
        echo "ERROR: $CCONF not exist"
        return 1
    fi 
    return 0
}

function ensure_ownership()
{
    chown -R ceph:ceph $DIR_ETC_CEPH     || return 1
    chown -R ceph:ceph $DIR_VAR_LIB_CEPH || return 1
    chown -R ceph:ceph $DIR_VAR_RUN_CEPH || return 1
    return 0
}
